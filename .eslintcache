[{"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\index.js":"1","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\App.js":"2","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers.js":"4","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\layout\\layout.js":"5","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\axios\\axiosInstance.js":"6","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\authActions.js":"7","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\auth\\RoutesConfig.js":"8","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\authReducer.js":"9","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\attributeReducer.js":"10","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\categoryReducer.js":"11","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\userReducer.js":"12","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\productReducer.js":"13","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\auth\\Roles.js":"14","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\HomePage.js":"15","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actionTypes.js":"16","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\admin\\AdminPanel.js":"17","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\admin\\category\\CategoryForm.js":"18","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\auth\\SignInForm.js":"19","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\auth\\SignUpForm.js":"20","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\user\\SentEmailView.js":"21","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\user\\ForgotPasswordForm.js":"22","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\user\\InvalidTokenView.js":"23","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\user\\ChangePasswordForm.js":"24","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\static\\Header.js":"25","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\products\\ProductView.js":"26","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\utils\\utils.js":"27","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\categoryActions.js":"28","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\attributeActions.js":"29","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\userActions.js":"30","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\components\\AuthButton.js":"31","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\productActions.js":"32","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\products\\ProductForm.js":"33","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\shoppingCartReducer.js":"34","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\shopping_cart\\ShoppingCartView.js":"35","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\shoppingCartActions.js":"36","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\utils\\imageUploadComponent.js":"37","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\utils\\productsFilterComponent.js":"38","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\orders\\OrderForm.js":"39","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\orderReducer.js":"40","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\orderActions.js":"41","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\orders\\MyOrders.js":"42"},{"size":928,"mtime":1636569509265,"results":"43","hashOfConfig":"44"},{"size":548,"mtime":1636569744127,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":859,"mtime":1643558947688,"results":"47","hashOfConfig":"44"},{"size":347,"mtime":1636574090183,"results":"48","hashOfConfig":"44"},{"size":547,"mtime":1636567962606,"results":"49","hashOfConfig":"44"},{"size":2129,"mtime":1640347014930,"results":"50","hashOfConfig":"44"},{"size":5147,"mtime":1643570784100,"results":"51","hashOfConfig":"44"},{"size":1790,"mtime":1640347014934,"results":"52","hashOfConfig":"44"},{"size":1856,"mtime":1641929453254,"results":"53","hashOfConfig":"44"},{"size":1457,"mtime":1640347014935,"results":"54","hashOfConfig":"44"},{"size":872,"mtime":1640347014935,"results":"55","hashOfConfig":"44"},{"size":1703,"mtime":1643553812259,"results":"56","hashOfConfig":"44"},{"size":307,"mtime":1636567498164,"results":"57","hashOfConfig":"44"},{"size":320,"mtime":1641754022847,"results":"58","hashOfConfig":"44"},{"size":1859,"mtime":1643570529662,"results":"59","hashOfConfig":"44"},{"size":4186,"mtime":1643553812262,"results":"60","hashOfConfig":"44"},{"size":12779,"mtime":1643553812264,"results":"61","hashOfConfig":"44"},{"size":3224,"mtime":1643553812265,"results":"62","hashOfConfig":"44"},{"size":5440,"mtime":1643553812267,"results":"63","hashOfConfig":"44"},{"size":904,"mtime":1640347014944,"results":"64","hashOfConfig":"44"},{"size":2542,"mtime":1643553812271,"results":"65","hashOfConfig":"44"},{"size":922,"mtime":1640347014943,"results":"66","hashOfConfig":"44"},{"size":4452,"mtime":1643553812270,"results":"67","hashOfConfig":"44"},{"size":3915,"mtime":1643570333687,"results":"68","hashOfConfig":"44"},{"size":5949,"mtime":1643553812268,"results":"69","hashOfConfig":"44"},{"size":802,"mtime":1636568859349,"results":"70","hashOfConfig":"44"},{"size":1974,"mtime":1641690407144,"results":"71","hashOfConfig":"44"},{"size":2739,"mtime":1641929453252,"results":"72","hashOfConfig":"44"},{"size":1211,"mtime":1640347014931,"results":"73","hashOfConfig":"44"},{"size":1367,"mtime":1640347014927,"results":"74","hashOfConfig":"44"},{"size":3608,"mtime":1643553812258,"results":"75","hashOfConfig":"44"},{"size":19957,"mtime":1643553812267,"results":"76","hashOfConfig":"44"},{"size":598,"mtime":1641856674527,"results":"77","hashOfConfig":"44"},{"size":6972,"mtime":1643569227042,"results":"78","hashOfConfig":"44"},{"size":1462,"mtime":1641856505328,"results":"79","hashOfConfig":"44"},{"size":5603,"mtime":1643553812260,"results":"80","hashOfConfig":"44"},{"size":8575,"mtime":1643553812261,"results":"81","hashOfConfig":"44"},{"size":9511,"mtime":1643569814092,"results":"82","hashOfConfig":"44"},{"size":615,"mtime":1643570784118,"results":"83","hashOfConfig":"44"},{"size":880,"mtime":1643575342334,"results":"84","hashOfConfig":"44"},{"size":6198,"mtime":1643575948603,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1wsd6zi",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\index.js",[],["182","183"],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\App.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\layout\\layout.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\axios\\axiosInstance.js",["184"],"import axios from 'axios';\r\n\r\nexport const AUTH_TOKEN = 'auth_token';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://localhost:8080'+'/api',\r\n    headers: {\r\n        'Access-Control-Allow-Origin': '*'\r\n    }\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n    config => {\r\n        const token = localStorage.getItem(AUTH_TOKEN);\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    error => Promise.reject(error)\r\n);\r\n\r\nexport default axiosInstance;\r\n","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\auth\\RoutesConfig.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\authReducer.js",["185"],"import { isExpired } from 'react-jwt';\r\nimport { AUTH_TOKEN } from '../../axios/axiosInstance';\r\nimport {AUTHENTICATE_TOKEN, CURRENT_USER, SIGN_IN, SIGN_OUT, SIGN_UP, UPDATE_TOKEN} from '../actionTypes';\r\n\r\nconst initialState = {\r\n    currentUser: null,\r\n    token: null,\r\n};\r\n\r\nexport const AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            localStorage.setItem(AUTH_TOKEN, action.payload.token);\r\n            localStorage.setItem(CURRENT_USER, JSON.stringify(action.payload.user));\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload.user,\r\n                token: action.payload.token\r\n            };\r\n        case SIGN_OUT:\r\n            localStorage.removeItem(AUTH_TOKEN);\r\n            localStorage.removeItem(CURRENT_USER);\r\n            return {\r\n                ...state,\r\n                currentUser: null,\r\n                token: null\r\n            };\r\n        case UPDATE_TOKEN:\r\n            let token = action.payload;\r\n            let currentUser = null;\r\n            const isExp = isExpired(token);\r\n\r\n            if (!isExp) {\r\n                localStorage.setItem(AUTH_TOKEN, token);\r\n                currentUser = JSON.parse(localStorage.getItem(CURRENT_USER));\r\n            } else {\r\n                localStorage.removeItem(CURRENT_USER);\r\n                localStorage.removeItem(AUTH_TOKEN);\r\n                token = null;\r\n            }\r\n            return {\r\n                ...state,\r\n                token: token,\r\n                currentUser: currentUser\r\n            };\r\n        case AUTHENTICATE_TOKEN:\r\n            return {\r\n                ...state\r\n            };\r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n    }\r\n};\r\n","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\attributeReducer.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\categoryReducer.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\productReducer.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\auth\\Roles.js",["186"],"export const getRoleName = (roleKey) => {\r\n    switch (roleKey) {\r\n        case 'ROLE_ADMIN':\r\n            return 'ADMIN';\r\n        case 'ROLE_USER':\r\n            return 'USER';\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport default {\r\n    ADMIN: 'ROLE_ADMIN',\r\n    USER: 'ROLE_USER',\r\n};\r\n","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\HomePage.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actionTypes.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\admin\\AdminPanel.js",["187"],"import Button from '@mui/material/Button';\r\nimport {Link} from \"react-router-dom\";\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {Edit} from '@material-ui/icons';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport {wrapComponent} from \"react-snackbar-alert\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport React, {useEffect} from 'react';\r\nimport {CategoryActions} from '../../redux/actions/categoryActions';\r\n\r\nconst AdminPanel = wrapComponent(function ({createSnackbar}) {\r\n    const dispatch = useDispatch();\r\n    const categories = useSelector(state => state.category.categories);\r\n\r\n    useEffect(() => {\r\n        dispatch(CategoryActions.fetchAllCategories((success, response) => {\r\n\r\n        }));\r\n    }, []);\r\n\r\n    const handleCategoryDelete = id => {\r\n        dispatch(CategoryActions.deleteCategory(id));\r\n    };\r\n\r\n    return (\r\n        <div className={`container p-5`}>\r\n            <div>\r\n                <Button component={Link}\r\n                        to={'/categories/add'}\r\n                        variant=\"contained\" color=\"primary\"\r\n                        className={`text-white text-decoration-none float-right`}\r\n                >\r\n                    ADD CATEGORY\r\n                </Button>\r\n                <h3>\r\n                    Categories\r\n                </h3>\r\n                <div className={`pt-4`}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={``} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" padding=\"none\" width={70}>#</TableCell>\r\n                                    <TableCell align=\"left\">Category</TableCell>\r\n                                    <TableCell align=\"center\">Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {categories &&\r\n                                categories.map((category, i) => (\r\n                                    <TableRow key={category.id}>\r\n                                        <TableCell component=\"th\" scope=\"row\" name=\"categoryId\" padding=\"none\"\r\n                                                   align=\"center\">\r\n                                            {i + 1}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">{category.name}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Button onClick={() => {\r\n                                                // eslint-disable-next-line no-unused-expressions\r\n                                                ( window.confirm('Are you sure you wish to delete this category?')) ?\r\n                                                    handleCategoryDelete(category.id)\r\n                                                    : null\r\n                                            }}>\r\n                                                <HighlightOffIcon/>\r\n                                            </Button>\r\n                                            <Button\r\n                                                href={`/categories/edit/${category.id}`}\r\n                                            >\r\n                                                <Edit/>\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AdminPanel;","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\admin\\category\\CategoryForm.js",["188","189","190"],"import React, {useEffect, useRef, useState} from \"react\";\r\nimport {Form, Field, FieldArray, Formik, useFormikContext} from \"formik\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport {wrapComponent} from \"react-snackbar-alert\";\r\nimport {useHistory, useParams} from \"react-router\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {CategoryActions} from \"../../../redux/actions/categoryActions\";\r\nimport {AttributeActions} from \"../../../redux/actions/attributeActions\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport RemoveCircleOutline from '@material-ui/icons/RemoveCircleOutline'\r\nimport {ProductActions} from \"../../../redux/actions/productActions\";\r\n\r\nconst validationSchema = yup.object({\r\n    name: yup.string(\"Enter Category\").required(\"Category is required\")\r\n});\r\n\r\nconst CategoryForm = wrapComponent(function ({createSnackbar}) {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {categoryId} = useParams();\r\n    const formikRef = useRef(null)\r\n    const [attributeIdsToRemove, setAttributeIdsToRemove] = useState([])\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        attributes: []\r\n    };\r\n\r\n    function onChangeAttribute(e, field, values, setValues, action, i) {\r\n        if(Boolean(categoryId) && action === \"delete\"){\r\n            deleteAttribute(values.attributes[i].id, false)\r\n        }\r\n        const attributes = [...values.attributes];\r\n        if(action === \"add\"){\r\n            attributes.push({\r\n                id: -1,\r\n                name: \"\",\r\n                suffix: \"\",\r\n                categoryId: -1,\r\n                numeric: false\r\n            })\r\n        }\r\n        else if(action === \"delete\"){\r\n            attributes.splice(i, 1)\r\n        }\r\n        setValues({ ...values, attributes });\r\n        field.onChange(e);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Boolean(categoryId)) {\r\n            dispatch(CategoryActions.fetchCategory(categoryId, (success, response) => {\r\n                if (Boolean(success)) {\r\n                    formikRef.current.setFieldValue(\"name\", response.data.name)\r\n                    dispatch(AttributeActions.fetchAttributesByCategory(categoryId, (success, response) => {\r\n                        setTimeout(function (){ //da ne se pojavi error dodeka refreshne, ako mozhe\r\n                            if(Boolean(success)){//bolje reshenie da se najde bi bilo top (da odma se pojavat atributi bez refresh)\r\n                                formikRef.current.setFieldValue(\"attributes\", response.data)\r\n                            }\r\n                            else {\r\n                                createSnackbar({\r\n                                    message: 'Attributes fetching error!',\r\n                                    timeout: 2500,\r\n                                    theme: 'error'\r\n                                });\r\n                            }\r\n                        }, 0)\r\n                    }))\r\n                } else {\r\n                    createSnackbar({\r\n                        message: 'Category not found!',\r\n                        timeout: 2500,\r\n                        theme: 'error'\r\n                    });\r\n                    history.goBack();\r\n                }\r\n            }));\r\n        }\r\n    }, []);\r\n\r\n    function submitCategory(values){\r\n        if (categoryId) {\r\n            deleteAttribute(-1, true)\r\n            dispatch(\r\n                CategoryActions.updateCategory(categoryId, values, success => {\r\n                    createSnackbar({\r\n                        message: success ? \"Successfully Updated Category\" : \"Category failed to Update\",\r\n                        timeout: 2500,\r\n                        theme: success ? \"success\" : \"error\",\r\n                    });\r\n                    if(values.attributes.length>0)\r\n                        updateAttributes(values)\r\n                })\r\n            );\r\n        } else {\r\n            dispatch(\r\n                CategoryActions.addCategory(values, (success, response) => {\r\n                    createSnackbar({\r\n                        message: success ? \"Successfully created category\" : \"Category failed to create\",\r\n                        timeout: 2500,\r\n                        theme: success ? \"success\" : \"error\",\r\n                    });\r\n                    success && history.push(`/categories/edit/${response.data.id}`);\r\n                    if(values.attributes.length>0)\r\n                        addAttributes(values, response.data.id)\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    function addAttributes(values, cat_id){\r\n        values.attributes.forEach(attr => attr.categoryId = cat_id)\r\n        dispatch(\r\n            AttributeActions.addAttributes(values.attributes, (success, response) => {\r\n                //window.location.reload()\r\n            })\r\n        );\r\n    }\r\n\r\n    function updateAttributes(values){\r\n        let attributesToAdd = []\r\n        values.attributes.forEach(attr => {\r\n            if(attr.id === -1){\r\n                attributesToAdd.push(attr)\r\n            }\r\n            else{\r\n                dispatch(\r\n                    AttributeActions.updateAttribute(attr, (success, response) => {\r\n                        //window.location.reload()\r\n                    })\r\n                )\r\n            }\r\n        })\r\n        attributesToAdd.forEach(attr => attr.categoryId = categoryId)\r\n        dispatch(\r\n            AttributeActions.addAttributes(attributesToAdd, (success, response) => {\r\n                //window.location.reload()\r\n            })\r\n        );\r\n    }\r\n\r\n    function deleteAttribute(id, final){\r\n        if(final) {\r\n            let i=0;\r\n            function deleteCategoryAttribute(attr_id){\r\n                dispatch(\r\n                    AttributeActions.deleteAttribute(attr_id, (success, response) => {\r\n                        i++\r\n                        if(i<attributeIdsToRemove.length)\r\n                            deleteCategoryAttribute(attributeIdsToRemove[i])\r\n                    })\r\n                )\r\n            }\r\n            deleteCategoryAttribute(attributeIdsToRemove[i])\r\n        }\r\n        else{\r\n            setAttributeIdsToRemove([...attributeIdsToRemove, id])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`container p-5 w-50`}>\r\n            <h3>\r\n                {Boolean(categoryId) ? 'Edit Category' : 'Create Category'}\r\n            </h3>\r\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={submitCategory} innerRef = {formikRef}>\r\n            {({errors, values, touched, setValues, handleChange}) => (\r\n            <Form className={`text-center pt-4`}>\r\n                <TextField\r\n                    className={``}\r\n                    fullWidth\r\n                    name={`name`}\r\n                    label=\"Category name\"\r\n                    type=\"name\"\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    error={touched.name && Boolean(errors.name)}\r\n                    helperText={touched.name && errors.name}\r\n                />\r\n                <div className={'row'}>\r\n                    <h3 className={'text-start pt-4 pb-1 col-6'}>\r\n                        {\"Attributes\"}\r\n                    </h3>\r\n                    <div className={'col-4'}/>\r\n                    <Field>\r\n                        {({ field }) => (\r\n                            <div className={\"col-2 pt-2\"}>\r\n                                <IconButton aria-label=\"add\"\r\n                                            className={''}\r\n                                            onClick={e => onChangeAttribute(e, field, values, setValues, \"add\")}\r\n                                >\r\n                                    <AddCircleOutlineIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                </div>\r\n                <FieldArray name=\"attributes\">\r\n                    {() => (values.attributes.map((attribute, i) => {\r\n                        return (\r\n                            <div key={i} className=\"list-group list-group-flush\">\r\n                                <div className=\"list-group-item\">\r\n                                    <div className=\"form-row row\">\r\n                                        <div className=\"form-group col-5\">\r\n                                            <TextField\r\n                                                className={``}\r\n                                                fullWidth\r\n                                                name={`attributes.${i}.name`}\r\n                                                label=\"Attribute name\"\r\n                                                type=\"name\"\r\n                                                onChange={handleChange}\r\n                                                value={values.attributes[i].name}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group col\">\r\n                                            <FormControl fullWidth>\r\n                                            <InputLabel>Numeric</InputLabel>\r\n                                            <Select\r\n                                                name={`attributes.${i}.numeric`}\r\n                                                onChange={handleChange}\r\n                                                value={values.attributes[i].numeric}\r\n                                            >\r\n                                                <MenuItem value={true}>True</MenuItem>\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                            </Select>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                        <div className=\"form-group col-4\">\r\n                                            <TextField\r\n                                                className={``}\r\n                                                fullWidth\r\n                                                name={`attributes.${i}.suffix`}\r\n                                                label=\"Attribute suffix\"\r\n                                                type=\"name\"\r\n                                                onChange={handleChange}\r\n                                                value={values.attributes[i].suffix}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={\"form-group col-1\"}>\r\n                                            <Field>\r\n                                                {({ field }) => (\r\n                                                    <div className={\"col-2 pt-2\"}>\r\n                                                        <IconButton aria-label=\"delete\"\r\n                                                            className={''}\r\n                                                            onClick={e => onChangeAttribute(e, field, values, setValues, \"delete\", i)}\r\n                                                            >\r\n                                                        <RemoveCircleOutline />\r\n                                                    </IconButton>\r\n                                                    </div>\r\n                                                )}\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }))}\r\n                </FieldArray>\r\n                <div className={`pt-3 float-left`}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                    >\r\n                        {categoryId ? \"Edit\" : \"Create\"}\r\n                    </Button>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        href={'/admin'}\r\n                    >\r\n                        Exit\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CategoryForm;\r\n","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\auth\\SignInForm.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\auth\\SignUpForm.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\user\\SentEmailView.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\user\\ForgotPasswordForm.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\user\\InvalidTokenView.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\user\\ChangePasswordForm.js",["191"],"import {wrapComponent} from \"react-snackbar-alert\";\r\nimport {useHistory, useParams} from \"react-router\";\r\nimport * as yup from \"yup\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {UserActions} from \"../../redux/actions/userActions\";\r\nimport {AuthActions} from \"../../redux/actions/authActions\";\r\nimport * as Yup from \"yup\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nconst validationSchema = yup.object({\r\n    newPassword: yup.string('Enter your password')\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .required('Password is required')\r\n        .oneOf([Yup.ref('repeatNewPassword'), null], 'Passwords must match'),\r\n    repeatNewPassword: yup.string('Repeat new password')\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .required('It is required to repeat the new password')\r\n        .oneOf([Yup.ref('newPassword'), null], 'Passwords must match')\r\n});\r\n\r\nconst ChangePasswordForm = wrapComponent(function ({createSnackbar}) {\r\n    const {authToken} = useParams();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(AuthActions.authenticateToken(authToken, (success, response) => {\r\n            if (success) {\r\n                setUserId(response.data)\r\n            } else {\r\n                history.push(\"/forgot-password/invalid-token\");\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newPassword: '',\r\n            repeatNewPassword: ''\r\n        },\r\n        validationSchema,\r\n        onSubmit: values => {\r\n            dispatch(\r\n                UserActions.changePassword({\r\n                        userId: userId,\r\n                        newPassword: values.newPassword\r\n                    },\r\n                    success => {\r\n                        if (Boolean(success)) {\r\n                            createSnackbar({\r\n                                message: \"Successfully changed password\",\r\n                                timeout: 2500,\r\n                                theme: 'success'\r\n                            });\r\n                            history.push('/signin');\r\n                        } else {\r\n                            createSnackbar({\r\n                                message: \"Error changing password\",\r\n                                timeout: 2500,\r\n                                theme: 'error'\r\n                            });\r\n                        }\r\n                    }\r\n                )\r\n            );\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form className={`container w-50 pt-5`} onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <h3>Enter new password</h3>\r\n            </div>\r\n            <InputLabel className={`pt-3`}>\r\n                New Password\r\n            </InputLabel>\r\n            <TextField fullWidth\r\n                       id='newPassword' name='newPassword'\r\n                       value={formik.values.newPassword}\r\n                       type='password'\r\n                       onChange={formik.handleChange}\r\n                       error={formik.touched.newPassword && Boolean(formik.errors.newPassword)}\r\n                       helperText={formik.touched.newPassword && formik.errors.newPassword}\r\n            >\r\n            </TextField>\r\n            <InputLabel className={`pt-2`}>\r\n                Repeat New Password\r\n            </InputLabel>\r\n            <TextField fullWidth\r\n                       id='repeatNewPassword' name='repeatNewPassword'\r\n                       value={formik.values.repeatNewPassword}\r\n                       type='password'\r\n                       onChange={formik.handleChange}\r\n                       error={formik.touched.repeatNewPassword && Boolean(formik.errors.repeatNewPassword)}\r\n                       helperText={formik.touched.repeatNewPassword && formik.errors.repeatNewPassword}\r\n            >\r\n            </TextField>\r\n            <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\"\r\n                    className={`mt-3`}\r\n            >\r\n                Submit\r\n            </Button>\r\n        </form>\r\n    );\r\n\r\n})\r\n\r\nexport default ChangePasswordForm;","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\static\\Header.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\products\\ProductView.js",["192","193","194"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ProductActions} from \"../../redux/actions/productActions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Roles from \"../../auth/Roles\";\r\nimport {ShoppingCartActions} from \"../../redux/actions/shoppingCartActions\";\r\nimport {wrapComponent} from \"react-snackbar-alert\";\r\nimport {useHistory} from \"react-router\";\r\nimport ProductsFilterComponent from \"../../utils/productsFilterComponent\";\r\nimport {Card, CardContent, CardActions, CardActionArea, CardMedia, Typography} from \"@mui/material\";\r\n\r\nconst ProductView = wrapComponent(function ({createSnackbar}) {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector(state => state.product.products);\r\n    const auth = useSelector(state => state.auth.currentUser);\r\n    const history = useHistory();\r\n    const [productsFetched, setProductsFetched] = useState(false)\r\n\r\n    const [role, setRole] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (auth) {\r\n            setRole(auth.role);\r\n        }\r\n    }, [auth]);\r\n\r\n    useEffect(() => {\r\n        dispatch(ProductActions.fetchAllProducts((success, response) => {\r\n            if(Boolean(success)){\r\n                setProductsFetched(true)\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    const handleProductDelete = id => {\r\n        dispatch(ProductActions.deleteProduct(id));\r\n    };\r\n\r\n    const handleAddToCart = id => {\r\n        if (Boolean(role)) {\r\n            dispatch(ShoppingCartActions.addToShoppingCart(auth.username, {\r\n                'productId': id,\r\n                'quantity': 1,\r\n            }, (success, response) => {\r\n                createSnackbar({\r\n                    message: success ? 'Successfully added product to cart.' : 'Failed to add product to cart.',\r\n                    timeout: 2500,\r\n                    theme: success ? 'success' : 'error'\r\n                });\r\n            }))\r\n        } else {\r\n            createSnackbar({\r\n                message: 'Sorry, you must be signed in in order to add items to your shopping cart.',\r\n                timeout: 3000,\r\n                theme: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`container p-5`}>\r\n            <div className={`pb-3 mb-3`}>\r\n                {\r\n                    role === Roles.ADMIN ?\r\n                        <Button component={Link}\r\n                                to={'/products/add'}\r\n                                variant=\"contained\" color=\"primary\"\r\n                                className={`text-white text-decoration-none float-right`}\r\n                        >\r\n                            ADD PRODUCT\r\n                        </Button>\r\n                        :\r\n                        null\r\n                }\r\n                {/*TODO Robert: The title should be replaced with category name*/}\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className={`row`}>\r\n                {productsFetched ?\r\n                    <div className={`col-md-3`}>\r\n                        <h4>\r\n                            Filter products\r\n                        </h4>\r\n                        <ProductsFilterComponent products={products} />\r\n                    </div>\r\n                    : null\r\n                }\r\n                <div className={`col-md-9`}>\r\n                    <div className={`row`}>\r\n                        {products && products.map((product, i) => (\r\n                            <div className={`col-md-4 col-sm-6`}>\r\n                                <Card sx={{ maxWidth: 345 }}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            height=\"280\"\r\n                                            image={\"http://localhost:8080/api/products/images/\" + product.id + \"/m/main\"}\r\n                                            alt=\"green iguana\"\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                                {product.productTitle}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                {product.productDescriptionHTML}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                    { role === Roles.ADMIN ?\r\n                                        <CardActions>\r\n                                            <Button color=\"primary\"\r\n                                                    component={Link}\r\n                                                    to={`/products/edit/${product.id}`}\r\n                                            >\r\n                                                EDIT\r\n                                            </Button>\r\n                                        </CardActions>\r\n                                        : null\r\n                                    }\r\n                                    <Button color={\"primary\"}\r\n                                            onClick={() => handleAddToCart(product.id)}\r\n                                            variant=\"contained\">Add to cart</Button>\r\n                                </Card>\r\n                                <br/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ProductView;","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\utils\\utils.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\categoryActions.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\attributeActions.js",["195"],"import axios from \"../../axios/axiosInstance\";\r\nimport {\r\n    FETCH_ATTRIBUTES,\r\n    FETCH_ATTRIBUTE,\r\n    FETCH_ATTRIBUTES_BY_CATEGORY,\r\n    UPDATE_ATTRIBUTE,\r\n    ADD_ATTRIBUTE,\r\n    ADD_ATTRIBUTES,\r\n    DELETE_ATTRIBUTE\r\n} from \"../actionTypes\";\r\n\r\nexport const AttributeActions = {\r\n    fetchAllAttributes: () => dispatch => {\r\n        axios.get(\"/attributes\").then(response => {\r\n            dispatch({\r\n                type: FETCH_ATTRIBUTES,\r\n                attributes: response.data,\r\n            });\r\n        });\r\n    },\r\n    fetchAttribute: (id, callback) => dispatch => {\r\n        axios.get(`/attributes/${id}`).then(response => {\r\n            dispatch({\r\n                type: FETCH_ATTRIBUTE,\r\n                attribute: response.data,\r\n            });\r\n            callback(true, response);\r\n        }).catch((error) => {\r\n            callback(false, error)\r\n        });\r\n    },\r\n    fetchAttributesByCategory: (cat_id, callback) => dispatch => {\r\n        axios.get(`/attributes/bycategory/${cat_id}`).then(response => {\r\n            dispatch({\r\n                type: FETCH_ATTRIBUTES_BY_CATEGORY,\r\n                attributes: response.data,\r\n            });\r\n            callback(true, response);\r\n        }).catch((error) => {\r\n            callback(false, error)\r\n        });\r\n    },\r\n    updateAttribute: (attribute, callback) => dispatch => {\r\n        axios.put(`/attributes/update`, attribute)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: UPDATE_ATTRIBUTE,\r\n                    attribute: response.data,\r\n                });\r\n                callback(true);\r\n            })\r\n            .catch(() => {\r\n                callback(false);\r\n            });\r\n    },\r\n    addAttribute: (attribute, callback) => dispatch => {\r\n        axios.post(\"/attributes/create\", attribute).then(response => {\r\n            dispatch({\r\n                type: ADD_ATTRIBUTE,\r\n                attribute: response.data,\r\n            });\r\n            callback(true, response);\r\n        }).catch((error) => {\r\n            callback(false, error);\r\n        })\r\n    },\r\n    addAttributes: (attributes, callback) => dispatch => {\r\n        axios.post(\"/attributes/createall\", attributes).then(response => {\r\n            dispatch({\r\n                type: ADD_ATTRIBUTES,\r\n                response: response.data,\r\n            });\r\n            callback(true, response);\r\n        }).catch((error) => {\r\n            callback(false, error);\r\n        })\r\n    },\r\n    deleteAttribute: (id, callback) => dispatch => {\r\n        axios.delete(`/attributes/delete/${id}`).then(response => {\r\n            callback(true, response);\r\n        }).catch((error) => {\r\n            callback(false, error);\r\n        })\r\n    }\r\n}","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\components\\AuthButton.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\productActions.js",["196"],"import axios from '../../axios/axiosInstance';\r\nimport {\r\n    FETCH_PRODUCT,\r\n    FETCH_PRODUCTS,\r\n    ADD_PRODUCT,\r\n    UPDATE_PRODUCT,\r\n    DELETE_PRODUCT, ADD_NEW_PRODUCT_IMAGE,\r\n} from '../actionTypes';\r\n\r\nexport const ProductActions = {\r\n    fetchProduct: (id, callback) => dispatch => {\r\n        axios.get(`/products/${id}`).then(resp => {\r\n            dispatch({\r\n                type: FETCH_PRODUCT,\r\n                product: resp.data,\r\n            });\r\n            callback(true, resp);\r\n        }).catch((error) => {\r\n            callback(false, error);\r\n        })\r\n    },\r\n    fetchAllProducts: (callback) => dispatch => {\r\n        axios.get(\"/products\").then(resp => {\r\n            dispatch({\r\n                type: FETCH_PRODUCTS,\r\n                products: resp.data,\r\n            });\r\n            callback(true, resp)\r\n        }).catch(error => {\r\n            callback(false, error);\r\n        });\r\n    },\r\n    filterProducts: (string) => dispatch => {\r\n        axios.get(\"/products/filter?\" + string).then(resp => {\r\n            dispatch({\r\n                type: FETCH_PRODUCTS,\r\n                products: resp.data,\r\n            });\r\n        });\r\n    },\r\n    deleteProduct: id => dispatch => {\r\n        axios.delete(`/products/delete/${id}`).then(() => {\r\n            dispatch({\r\n                type: DELETE_PRODUCT,\r\n                productId: id,\r\n            });\r\n        });\r\n    },\r\n    addProduct: (product, callback) => dispatch => {\r\n        axios.post(`/products/create`, product).then((response) => {\r\n            dispatch({\r\n                type: ADD_PRODUCT,\r\n                product: response.data,\r\n            });\r\n            callback(true, response);\r\n        }).catch((error) => {\r\n            callback(false, error);\r\n        })\r\n    },\r\n    updateProduct: (product, callback) => dispatch => {\r\n        axios.put(`/products/update`, product).then((response) => {\r\n            dispatch({\r\n                type: UPDATE_PRODUCT,\r\n                product: response.data,\r\n            });\r\n            callback(true, response);\r\n        }).catch((error) => {\r\n            callback(false, error);\r\n        })\r\n    },\r\n    addNewProductImage: (product_id, image, callback) => dispatch => {\r\n        var formData = new FormData()\r\n        formData.append('image', image);\r\n        axios.put('/products/img/' + product_id, formData).then(response => {\r\n            callback(true, response)\r\n        }).catch((error) => {\r\n            callback(false, error);\r\n        })\r\n    },\r\n    setMainProductImage: (product_id, main_image_id) => dispatch => {\r\n        var formData = new FormData();\r\n        formData.append('productId', product_id)\r\n        formData.append('mainImageId', main_image_id)\r\n        axios.put('/products/img', formData);\r\n    },\r\n    addAllProductImages: (product_id, main_image_id, images, callback) => dispatch => {\r\n        var formData = new FormData();\r\n        formData.append('productId', product_id)\r\n        formData.append('mainImageId', main_image_id)\r\n        for(let i=0; i<images.length; i++){\r\n            formData.append('images', images[i])\r\n        }\r\n        axios.post('/products/img', formData).then(response => {\r\n            callback(true, response)\r\n        }).catch((error) => {\r\n            callback(false, error);\r\n        })\r\n    },\r\n    deleteProductImage: (product_id, image_id, callback) => dispatch => {\r\n        axios.delete('/products/img/delete/' + product_id + \"/\" + image_id).then(response => {\r\n            callback(true, response)\r\n        }).catch((error) => {\r\n            callback(false, error);\r\n        })\r\n    }\r\n}","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\products\\ProductForm.js",["197","198","199","200","201"],"import React, {useEffect, useRef, useState} from \"react\";\r\nimport {Form, Field, FieldArray, Formik, useFormikContext, useFormik} from \"formik\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {FormControl, InputLabel, MenuItem, Select, InputAdornment} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport {wrapComponent} from \"react-snackbar-alert\";\r\nimport {useHistory, useParams} from \"react-router\";\r\nimport {ProductActions} from \"../../redux/actions/productActions\";\r\nimport {CategoryActions} from \"../../redux/actions/categoryActions\";\r\nimport {AttributeActions} from \"../../redux/actions/attributeActions\";\r\nimport {CircularProgress} from \"@mui/material\";\r\nimport ImageUploadComponent from \"../../utils/imageUploadComponent\";\r\n\r\nconst validationSchema = yup.object({\r\n    productTitle: yup.string(\"Enter product title\").required(\"Product title is required\"),\r\n    productDescriptionHTML: yup.string(\"Enter description\").required(\"Description is required\"),\r\n    priceInMKD: yup.number(\"Enter price\").required(\"Price is required\").min(0, 'Minimum price is 0 MKD'),\r\n    categoryId: yup.number(\"Please select category\").required(\"Category is required\"),\r\n});\r\n\r\nconst ProductForm = wrapComponent(function ({createSnackbar}) {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {productId} = useParams();\r\n    const [categories, setCategories] = useState([]);\r\n    const [attributes, setAttributes] = useState([]);\r\n    const [areThereAttributes, setAreThereAttributes] = useState(true);\r\n    const [imageIdsToRemove, setImageIdsToRemove] = useState([]);\r\n    const [images, setImages] = useState({\r\n        images: [],\r\n        mainImage: 0\r\n    });\r\n    const [validateMainImage, setValidateMainImage] = useState(false)\r\n    const [backendWorking, setBackendWorking] = useState(false)\r\n    const formikRef = useRef(null)\r\n\r\n    let initialValues = {\r\n        id: '',\r\n        categoryId: '',\r\n        productTitle: '',\r\n        productDescriptionHTML: '',\r\n        priceInMKD: '',\r\n        attributeIdAndValueMap: {},\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Boolean(productId)) {\r\n            dispatch(ProductActions.fetchProduct(productId, (success, response) => {\r\n                if (success) {\r\n                    formikRef.current.setFieldValue(\"id\", response.data.id);\r\n                    formikRef.current.setFieldValue(\"categoryId\", response.data.categoryId);\r\n                    formikRef.current.setFieldValue(\"productTitle\", response.data.productTitle);\r\n                    formikRef.current.setFieldValue(\"productDescriptionHTML\", response.data.productDescriptionHTML);\r\n                    formikRef.current.setFieldValue(\"priceInMKD\", response.data.priceInMKD);\r\n                    formikRef.current.setFieldValue(\"attributeIdAndValueMap\", response.data.attributeIdAndValueMap);\r\n                    dispatch(AttributeActions.fetchAttributesByCategory(response.data.categoryId, (success, response) => {\r\n                        if (success) {\r\n                            setAttributes(response.data);\r\n                        } else {\r\n                            alert(\"Error while fetching attributes.\");\r\n                        }\r\n                    }))\r\n                } else {\r\n                    if (response.data.message) {\r\n                        alert(response.data.message);\r\n                    } else {\r\n                        alert(\"Product not found\");\r\n                    }\r\n                    history.push(\"/products\");\r\n                }\r\n            }));\r\n        }\r\n        dispatch(CategoryActions.fetchAllCategories((success, response) => {\r\n            if (success) {\r\n                setCategories(response.data);\r\n            } else {\r\n                alert(\"Error while fetching categories.\");\r\n            }\r\n        }));\r\n\r\n    }, []);\r\n\r\n    function onChangeCategory(categoryId){\r\n        dispatch(AttributeActions.fetchAttributesByCategory(categoryId, (success, response) => {\r\n            if (success) {\r\n                formikRef.current.setFieldValue(\"attributeIdAndValueMap\", {});\r\n                setAttributes(response.data);\r\n                setAreThereAttributes(response.data.length > 0)\r\n            } else {\r\n                if (response.data) {\r\n                    alert(response.data.message);\r\n                } else {\r\n                    alert(\"Attribute fetching error!\");\r\n                }\r\n                history.push(\"/products\");\r\n            }\r\n        }))\r\n    }\r\n\r\n    function deleteProduct(productId){\r\n        if(window.confirm(\"Are you sure you want to delete this product?\")){\r\n            dispatch(ProductActions.deleteProduct(productId))\r\n            history.push(\"/products\");\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    function handleImagesChange(imageState){\r\n        setImages(imageState)\r\n    }\r\n\r\n    function removeImageRemotely(image_id){\r\n        setImageIdsToRemove([...imageIdsToRemove, image_id])\r\n    }\r\n\r\n    function onSubmit(values) {\r\n        var tempImgValuesArray = []\r\n        for(let i=0; i<images.images.length; i++)\r\n            tempImgValuesArray.push(i+1)\r\n        if(images.images.length > 0 && !tempImgValuesArray.includes(images.mainImage)){\r\n            setValidateMainImage(true)\r\n            return;\r\n        }\r\n        else{\r\n            setValidateMainImage(false)\r\n        }\r\n        setBackendWorking(true)\r\n        if(Boolean(productId)){\r\n            let i=0;\r\n            function deleteProductImage(imageId){\r\n                dispatch(\r\n                    ProductActions.deleteProductImage(productId, imageId, (success, response) => {\r\n                        i++\r\n                        if(i<imageIdsToRemove.length)\r\n                            deleteProductImage(imageIdsToRemove[i])\r\n                    })\r\n                )\r\n            }\r\n            deleteProductImage(imageIdsToRemove[i])\r\n        }\r\n        Boolean(productId) ? dispatch(\r\n            ProductActions.updateProduct({\r\n                id: values.id,\r\n                categoryId: values.categoryId,\r\n                productTitle: values.productTitle,\r\n                productDescriptionHTML: values.productDescriptionHTML,\r\n                priceInMKD: values.priceInMKD,\r\n                attributeIdAndValueMap: values.attributeIdAndValueMap\r\n            }, (success, response) => {\r\n                if(success) {\r\n                    if (images.images.length > 0) {\r\n                        setBackendWorking(true);\r\n                        var imagesToUpload = []\r\n                        for(let i=0; i<images.images.length; i++){\r\n                            if(images.images[i] instanceof File){\r\n                                imagesToUpload.push(images.images[i])\r\n                            }\r\n                        }\r\n                        if(imagesToUpload.length === 0){\r\n                            createSnackbar({\r\n                                message: success ? 'Successfully Updated Product' : 'Product failed to Update',\r\n                                timeout: 2500,\r\n                                theme: success ? 'success' : 'error'\r\n                            });\r\n                            setBackendWorking(false)\r\n                        }\r\n                        else{\r\n                            let i=0;\r\n                            function uploadNewImage(imageToUpload){\r\n                                dispatch(\r\n                                    ProductActions.addNewProductImage(productId, imageToUpload, (success2, response) => {\r\n                                        if(!success2){\r\n                                            createSnackbar({\r\n                                                message: 'Image failed to Update',\r\n                                                timeout: 2500,\r\n                                                theme: 'error'\r\n                                            });\r\n                                        }\r\n                                        i++\r\n                                        if(i<imagesToUpload.length){\r\n                                            uploadNewImage(imagesToUpload[i])\r\n                                        }\r\n                                        else{\r\n                                            createSnackbar({\r\n                                                message: success2 ? 'Successfully Updated Product' : 'Product failed to Update',\r\n                                                timeout: 2500,\r\n                                                theme: success2 ? 'success' : 'error'\r\n                                            });\r\n                                            setBackendWorking(false)\r\n                                        }\r\n                                    })\r\n                                )\r\n                            }\r\n                            uploadNewImage(imagesToUpload[i])\r\n                        }\r\n                        if(images.images[images.mainImage-1] instanceof File){\r\n                            createSnackbar({\r\n                                message: 'Please re-select your main product image after images have finished uploading',\r\n                                timeout: 7000,\r\n                                theme: 'warning'\r\n                            });\r\n                        }\r\n                        else{\r\n                            const parts = images.images[images.mainImage-1].split(\"/\")\r\n                            dispatch(\r\n                                ProductActions.setMainProductImage(productId, Number(parts[parts.length - 1].replace(\".jpg\", \"\")))\r\n                            )\r\n                        }\r\n                        success && history.push(`/products/edit/${response.data.id}`);\r\n                    } else {\r\n                        createSnackbar({\r\n                            message: success ? 'Successfully Updated Product' : 'Product failed to Update',\r\n                            timeout: 2500,\r\n                            theme: success ? 'success' : 'error'\r\n                        });\r\n                        setBackendWorking(false)\r\n                        success && history.push(`/products/edit/${response.data.id}`);\r\n                    }\r\n                }\r\n            })\r\n        ) : dispatch(\r\n            ProductActions.addProduct({\r\n                categoryId: values.categoryId,\r\n                productTitle: values.productTitle,\r\n                productDescriptionHTML: values.productDescriptionHTML,\r\n                priceInMKD: values.priceInMKD,\r\n                attributeIdAndValueMap: values.attributeIdAndValueMap\r\n            }, (success, response) => {\r\n                if(success) {\r\n                    if (images.images.length > 0) {\r\n                        dispatch(\r\n                            ProductActions.addAllProductImages(response.data.id, images.mainImage, images.images, (success2, response2) => {\r\n                                createSnackbar({\r\n                                    message: success2 ? 'Successfully Created Product' : 'Product failed to Create',\r\n                                    timeout: 2500,\r\n                                    theme: success2 ? 'success' : 'error'\r\n                                });\r\n                                setBackendWorking(false)\r\n                                success2 && history.push(`/products/edit/${response.data.id}`);\r\n                            })\r\n                        )\r\n                    } else {\r\n                        createSnackbar({\r\n                            message: success ? 'Successfully Created Product' : 'Product failed to Create',\r\n                            timeout: 2500,\r\n                            theme: success ? 'success' : 'error'\r\n                        });\r\n                        setBackendWorking(false)\r\n                        success && history.push(`/products/edit/${response.data.id}`);\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}\r\n                innerRef={formikRef}>\r\n            {({errors, values, touched, setValues, handleChange}) => (\r\n                <Form className={`container pt-5 w-50`}>\r\n                    <div>\r\n                        <h3>\r\n                            {Boolean(productId) ? 'Edit Product' : 'New Product'}\r\n                        </h3>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"productTitle\"\r\n                            name=\"productTitle\"\r\n                            label=\"Product Title\"\r\n                            className={`py-2`}\r\n                            value={values.productTitle}\r\n                            onChange={handleChange}\r\n                            error={touched.productTitle && Boolean(errors.productTitle)}\r\n                            helperText={touched.productTitle && errors.productTitle}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"productDescriptionHTML\"\r\n                            name=\"productDescriptionHTML\"\r\n                            label=\"Description\"\r\n                            multiline\r\n                            rows={5}\r\n                            className={`py-2`}\r\n                            value={values.productDescriptionHTML}\r\n                            onChange={handleChange}\r\n                            error={touched.productDescriptionHTML && Boolean(errors.productDescriptionHTML)}\r\n                            helperText={touched.productDescriptionHTML && errors.productDescriptionHTML}\r\n                        />\r\n                        <div className={`row`}>\r\n                            <div className={`col`}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"priceInMKD\"\r\n                                    name=\"priceInMKD\"\r\n                                    label=\"Price in MKD\"\r\n                                    type=\"number\"\r\n                                    value={values.priceInMKD}\r\n                                    onChange={handleChange}\r\n                                    error={touched.priceInMKD && Boolean(errors.priceInMKD)}\r\n                                    helperText={touched.priceInMKD && errors.priceInMKD}\r\n                                />\r\n                            </div>\r\n                            <div className={`col`}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Category</InputLabel>\r\n                                    <Select\r\n                                        error={touched.categoryId && Boolean(errors.categoryId)}\r\n                                        helperText={touched.categoryId && errors.categoryId}\r\n                                        id='categoryId' name='categoryId'\r\n                                        onChange={change => {\r\n                                            values.categoryId = change.target.value;\r\n                                            onChangeCategory(change.target.value);\r\n                                        }}\r\n                                        value={values.categoryId}\r\n                                    >\r\n                                        {\r\n                                            categories.map((category, i) => {\r\n                                                return (\r\n                                                    <MenuItem key={category.id} value={category.id}>\r\n                                                        {category.name}\r\n                                                    </MenuItem>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className={'row'}>\r\n                            <div className={'col'}>\r\n                                <h4>Images</h4>\r\n                                <ImageUploadComponent\r\n                                    handleImagesChange={handleImagesChange}\r\n                                    productId={productId ? productId : -1}\r\n                                    removeImageRemotely={removeImageRemotely}\r\n                                />\r\n                                {validateMainImage ? <div className={\"text-danger\"}>Please select the main product image</div> : null}\r\n                            </div>\r\n                            <div className={'col'}>\r\n                                <h4>Attributes</h4>\r\n                                <FieldArray name=\"attributes\">\r\n                                    {() => (attributes.map((attribute, i) => {\r\n                                        return (\r\n                                            <TextField\r\n                                                required\r\n                                                fullWidth\r\n                                                label={attributes[i].name}\r\n                                                name={`attributeIdAndValueMap[${attribute.id}]`}\r\n                                                type={attributes[i].numeric ? \"number\" : \"text\"}\r\n                                                onChange={handleChange}\r\n                                                value={values.attributeIdAndValueMap[attribute.id]}\r\n                                                sx={{ m: 1, width: '25ch' }}\r\n                                                InputProps={{\r\n                                                    endAdornment: <InputAdornment position=\"end\">{attributes[i].suffix}</InputAdornment>,\r\n                                                }}\r\n                                            />\r\n                                        );\r\n                                    }))}\r\n                                </FieldArray>\r\n                                {\r\n                                    areThereAttributes ?  null : \"No attributes for this category.\"\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className={`pt-3 float-left`}>\r\n                            {backendWorking ? <CircularProgress /> :\r\n                                <Button\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\">\r\n                                {productId ? \"Edit\" : \"Create\"}\r\n                            </Button>\r\n                            }\r\n                            {productId && !backendWorking ? <Button\r\n                                className={'bg-danger'}\r\n                                variant=\"contained\"\r\n                                onClick={() => deleteProduct(productId)}\r\n                            >\r\n                                Delete Product\r\n                            </Button> : null}\r\n                            {backendWorking ? null :\r\n                                <Button\r\n                                color=\"primary\"\r\n                                href={'/products'}\r\n                            >\r\n                                Exit\r\n                            </Button> }\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n});\r\n\r\nexport default ProductForm;\r\n","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\shoppingCartReducer.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\shopping_cart\\ShoppingCartView.js",["202","203"],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\shoppingCartActions.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\utils\\imageUploadComponent.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\utils\\productsFilterComponent.js",["204","205","206","207","208","209"],"import React, {useRef, useEffect, useState} from \"react\";\r\nimport {Card, CardContent} from \"@mui/material\";\r\nimport {Slider} from \"@mui/material\";\r\nimport {AttributeActions} from \"../redux/actions/attributeActions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ProductActions} from \"../redux/actions/productActions\";\r\nimport {FormControlLabel} from \"@mui/material\";\r\nimport {Checkbox} from \"@mui/material\";\r\nimport {isNaN} from \"formik\";\r\n\r\nconst ProductsFilterComponent = (props) => {\r\n\r\n    //proizvodi\r\n    const [products, setProducts] = useState(props.products)\r\n    //granichni vrednosti (min-max) od site ceni na site proizvodi\r\n    const [priceRange, setPriceRange] = useState([])\r\n    //potrebni informacii (id, ime i suffix) za site atributi koi se naogjaat vo proizvodite (tamu se so id, tuka se so se)\r\n    const [neededAttributes, setNeededAttributes] = useState([])\r\n    //mnozhestva na site idinja na atributi i nivni vrednosti zemeni od proizvodite\r\n    const [attributeSets, setAttributeSets] = useState({})\r\n    //finalni filtri, zadadeni od korisnikot, za da ne se menuvaat attributeSets (ni trebaat kako granichni vrednosti)\r\n    const [filters, setFilters] = useState({})\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () =>{\r\n        var tempSet = {}\r\n        var priceArray = []\r\n        products.forEach(product => {\r\n            for(var key in product.attributeIdAndValueMap) {\r\n                var value = product.attributeIdAndValueMap[key];\r\n                if(!isNaN(parseFloat(value))){\r\n                    value = parseFloat(value)\r\n                }\r\n                var temp = tempSet[key]\r\n                if(temp === undefined){\r\n                    temp = new Set()\r\n                }\r\n                temp.add(value)\r\n                tempSet[key] = temp\r\n            }\r\n            priceArray.push(product.priceInMKD)\r\n        })\r\n        setAttributeSets(tempSet)\r\n        setPriceRange([\r\n            Math.min.apply(null, priceArray),\r\n            Math.max.apply(null, priceArray)\r\n        ])\r\n    }, [])\r\n\r\n    useEffect( () =>{\r\n        var allkeys = []\r\n        for(var key in attributeSets) {\r\n            allkeys.push(parseInt(key))\r\n        }\r\n        if(allkeys.length===0)\r\n            return\r\n        let i=0;\r\n        function fetchAttributeByIdAndAddToNeededAttributes(id){\r\n            dispatch(AttributeActions.fetchAttribute(id, (success, response) => {\r\n                if(Boolean(success)){\r\n                    setNeededAttributes((prevState => {\r\n                        return [...prevState, {\r\n                            id : parseInt(response.data.id),\r\n                            name : response.data.name,\r\n                            suffix : response.data.suffix\r\n                        }]\r\n                    }))\r\n                    i++\r\n                    if(i<allkeys.length) {\r\n                        fetchAttributeByIdAndAddToNeededAttributes(allkeys[i])\r\n                    }\r\n                }\r\n            }))\r\n        }\r\n        fetchAttributeByIdAndAddToNeededAttributes(allkeys[i])\r\n    }, [attributeSets])\r\n\r\n    function handleNonNumericalFilterChange(e){\r\n        var tempSet = filters[e.target.id]\r\n        if(tempSet === undefined){\r\n            tempSet = new Set()\r\n            // na pochetok beshe so site shtiklirani, zatoa gi dodavav, ama pologicno e site otshtiklirani\r\n            // Array.from(attributeSets[e.target.id]).forEach(value => {\r\n            //     tempSet.add(value)\r\n            // })\r\n        }\r\n        if(e.target.checked)\r\n            tempSet.add(e.target.name)\r\n        else\r\n            tempSet.delete(e.target.name)\r\n        setFilters(prevState => ({\r\n            ...prevState,\r\n            [e.target.id]:tempSet\r\n        }));\r\n    }\r\n\r\n    function handleNumericalFilterChange(id, value){\r\n        var tempSet = new Set(value)\r\n        setFilters(prevState => ({\r\n            ...prevState,\r\n            [id]:tempSet\r\n        }));\r\n    }\r\n\r\n    function hanldePriceRangeFilterChange(value){\r\n        setFilters(prevState => ({\r\n            ...prevState,\r\n            'pricerange':value\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchFilteredProducts()\r\n    }, [filters])\r\n\r\n    function fetchFilteredProducts(){\r\n        if(Object.keys(filters).length === 0)\r\n            return\r\n        var string = \"\"\r\n        if(filters['pricerange'] === undefined){\r\n            string = 'pricerange=mkd:' + priceRange[0] + '-' + priceRange[1] + '&attributes='\r\n        }\r\n        else{\r\n            string = 'pricerange=mkd:' + filters['pricerange'][0] + '-' + filters['pricerange'][1] + '&attributes='\r\n        }\r\n        for(var key in filters){\r\n            if(key!=='pricerange' && filters[key].size !== 0){\r\n                string = string + key + ':'\r\n                filters[key].forEach((value) => {\r\n                    string = string + value + '-'\r\n                })\r\n                string = string.substring(0, string.length-1) + ','\r\n            }\r\n        }\r\n        dispatch(ProductActions.filterProducts(string.substring(0, string.length-1)));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {priceRange[0] && priceRange[1] &&\r\n            <Card className={'mt-1'}>\r\n                <CardContent className={'ps-5 pe-5 pt-2 pb-0'}>\r\n                    <h5>Price</h5>\r\n                    <Slider\r\n                        min={priceRange[0]}\r\n                        max={priceRange[1]}\r\n                        defaultValue={[priceRange[0], priceRange[1]]}\r\n                        marks={[\r\n                            {value:priceRange[0]\r\n                                ,label:priceRange[0] + \"мкд\"},\r\n                            {value:priceRange[1]\r\n                                ,label:priceRange[1] + \"мкд\"}\r\n                        ]}\r\n                        onChangeCommitted={(_, v) => hanldePriceRangeFilterChange(v)}\r\n                        valueLabelDisplay=\"auto\"\r\n                        valueLabelFormat={value => `${value}мкд`}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n            }\r\n            {neededAttributes && neededAttributes.map((attribute, i) => (\r\n                <Card className={'mt-1'}>\r\n                    <CardContent className={'ps-5 pe-5 pt-2 pb-0'}>\r\n                        <h5>{attribute.name}</h5>\r\n                        {isNaN(parseInt(Array.from(attributeSets[attribute.id])[0])) ?\r\n                            Array.from(attributeSets[attribute.id]).map((attributeValue, i) => (\r\n                                <FormControlLabel control={\r\n                                    <Checkbox\r\n                                        //defaultChecked\r\n                                        id={attribute.id}\r\n                                        onChange={handleNonNumericalFilterChange}\r\n                                        name={attributeValue}\r\n                                    />\r\n                                } label={attributeValue}/>\r\n                            ))\r\n                            : //todo: mora da mozhe ova vo varijabla da se stavi da ne se pravi min/max 6 pati\r\n                            <Slider\r\n                                min={Math.min.apply(null, Array.from(attributeSets[attribute.id]))}\r\n                                max={Math.max.apply(null, Array.from(attributeSets[attribute.id]))}\r\n                                defaultValue={[Math.min.apply(null, Array.from(attributeSets[attribute.id])),Math.max.apply(null, Array.from(attributeSets[attribute.id]))]}\r\n                                marks={[\r\n                                    {value:Math.min.apply(null, Array.from(attributeSets[attribute.id]))\r\n                                        ,label:Math.min.apply(null, Array.from(attributeSets[attribute.id])) + attribute.suffix},\r\n                                    {value:Math.max.apply(null, Array.from(attributeSets[attribute.id])),\r\n                                        label:Math.max.apply(null, Array.from(attributeSets[attribute.id])) + attribute.suffix}\r\n                                ]}\r\n                                onChangeCommitted={(_, v) => handleNumericalFilterChange(attribute.id, v)}\r\n                                valueLabelDisplay=\"auto\"\r\n                                valueLabelFormat={value => `${value}${attribute.suffix}`}\r\n                            />\r\n                        }\r\n                    </CardContent>\r\n                </Card>\r\n            ))}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default ProductsFilterComponent;","C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\orders\\OrderForm.js",["210","211","212","213"],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\reducers\\orderReducer.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\redux\\actions\\orderActions.js",[],"C:\\Users\\User\\Desktop\\robert proekti\\6 semestar\\Integrirani Sistemi\\wineshop\\wineshop-frontend\\src\\views\\orders\\MyOrders.js",["214"],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":6,"column":37,"nodeType":"221","messageId":"222","endLine":6,"endColumn":38},{"ruleId":"223","severity":1,"message":"224","line":3,"column":62,"nodeType":"225","messageId":"226","endLine":3,"endColumn":69},{"ruleId":"227","severity":1,"message":"228","line":12,"column":1,"nodeType":"229","endLine":15,"endColumn":3},{"ruleId":"230","severity":1,"message":"231","line":25,"column":8,"nodeType":"232","endLine":25,"endColumn":10,"suggestions":"233"},{"ruleId":"223","severity":1,"message":"234","line":2,"column":42,"nodeType":"225","messageId":"226","endLine":2,"endColumn":58},{"ruleId":"223","severity":1,"message":"235","line":15,"column":9,"nodeType":"225","messageId":"226","endLine":15,"endColumn":23},{"ruleId":"230","severity":1,"message":"236","line":83,"column":8,"nodeType":"232","endLine":83,"endColumn":10,"suggestions":"237"},{"ruleId":"230","severity":1,"message":"238","line":39,"column":8,"nodeType":"232","endLine":39,"endColumn":10,"suggestions":"239"},{"ruleId":"223","severity":1,"message":"240","line":17,"column":11,"nodeType":"225","messageId":"226","endLine":17,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":34,"column":8,"nodeType":"232","endLine":34,"endColumn":10,"suggestions":"241"},{"ruleId":"223","severity":1,"message":"242","line":36,"column":11,"nodeType":"225","messageId":"226","endLine":36,"endColumn":30},{"ruleId":"223","severity":1,"message":"243","line":9,"column":5,"nodeType":"225","messageId":"226","endLine":9,"endColumn":21},{"ruleId":"223","severity":1,"message":"244","line":7,"column":21,"nodeType":"225","messageId":"226","endLine":7,"endColumn":42},{"ruleId":"223","severity":1,"message":"245","line":2,"column":15,"nodeType":"225","messageId":"226","endLine":2,"endColumn":20},{"ruleId":"223","severity":1,"message":"234","line":2,"column":42,"nodeType":"225","messageId":"226","endLine":2,"endColumn":58},{"ruleId":"223","severity":1,"message":"246","line":2,"column":60,"nodeType":"225","messageId":"226","endLine":2,"endColumn":69},{"ruleId":"223","severity":1,"message":"247","line":6,"column":22,"nodeType":"225","messageId":"226","endLine":6,"endColumn":33},{"ruleId":"230","severity":1,"message":"248","line":83,"column":8,"nodeType":"232","endLine":83,"endColumn":10,"suggestions":"249"},{"ruleId":"223","severity":1,"message":"250","line":22,"column":12,"nodeType":"225","messageId":"226","endLine":22,"endColumn":24},{"ruleId":"230","severity":1,"message":"251","line":49,"column":8,"nodeType":"232","endLine":49,"endColumn":10,"suggestions":"252"},{"ruleId":"223","severity":1,"message":"253","line":1,"column":16,"nodeType":"225","messageId":"226","endLine":1,"endColumn":22},{"ruleId":"223","severity":1,"message":"254","line":14,"column":22,"nodeType":"225","messageId":"226","endLine":14,"endColumn":33},{"ruleId":"230","severity":1,"message":"255","line":48,"column":8,"nodeType":"232","endLine":48,"endColumn":10,"suggestions":"256"},{"ruleId":"230","severity":1,"message":"231","line":76,"column":8,"nodeType":"232","endLine":76,"endColumn":23,"suggestions":"257"},{"ruleId":"230","severity":1,"message":"258","line":114,"column":8,"nodeType":"232","endLine":114,"endColumn":17,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":129,"column":38,"nodeType":"262","messageId":"263","endLine":131,"endColumn":18},{"ruleId":"223","severity":1,"message":"264","line":10,"column":9,"nodeType":"225","messageId":"226","endLine":10,"endColumn":24},{"ruleId":"223","severity":1,"message":"265","line":10,"column":42,"nodeType":"225","messageId":"226","endLine":10,"endColumn":59},{"ruleId":"223","severity":1,"message":"266","line":20,"column":8,"nodeType":"225","messageId":"226","endLine":20,"endColumn":24},{"ruleId":"230","severity":1,"message":"251","line":58,"column":8,"nodeType":"232","endLine":58,"endColumn":10,"suggestions":"267"},{"ruleId":"230","severity":1,"message":"251","line":49,"column":8,"nodeType":"232","endLine":49,"endColumn":10,"suggestions":"268"},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'SIGN_UP' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["271"],"'useFormikContext' is defined but never used.","'ProductActions' is defined but never used.","React Hook useEffect has missing dependencies: 'categoryId', 'createSnackbar', 'dispatch', and 'history'. Either include them or remove the dependency array. If 'createSnackbar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["272"],"React Hook useEffect has missing dependencies: 'authToken', 'dispatch', and 'history'. Either include them or remove the dependency array.",["273"],"'history' is assigned a value but never used.",["274"],"'handleProductDelete' is assigned a value but never used.","'DELETE_ATTRIBUTE' is defined but never used.","'ADD_NEW_PRODUCT_IMAGE' is defined but never used.","'Field' is defined but never used.","'useFormik' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'productId'. Either include them or remove the dependency array.",["275"],"'shoppingCart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createSnackbar', 'dispatch', 'history', and 'username'. Either include them or remove the dependency array. If 'createSnackbar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["276"],"'useRef' is defined but never used.","'setProducts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["277"],["278"],"React Hook useEffect has a missing dependency: 'fetchFilteredProducts'. Either include it or remove the dependency array.",["279"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'string', 'string'.","ArrowFunctionExpression","unsafeRefs","'CountryDropdown' is defined but never used.","'CountryRegionData' is defined but never used.","'HighlightOffIcon' is defined but never used.",["280"],["281"],"no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"282","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"291","fix":"299"},{"desc":"291","fix":"300"},"Update the dependencies array to be: [dispatch]",{"range":"301","text":"302"},"Update the dependencies array to be: [categoryId, createSnackbar, dispatch, history]",{"range":"303","text":"304"},"Update the dependencies array to be: [authToken, dispatch, history]",{"range":"305","text":"306"},{"range":"307","text":"302"},"Update the dependencies array to be: [dispatch, history, productId]",{"range":"308","text":"309"},"Update the dependencies array to be: [createSnackbar, dispatch, history, username]",{"range":"310","text":"311"},"Update the dependencies array to be: [products]",{"range":"312","text":"313"},"Update the dependencies array to be: [attributeSets, dispatch]",{"range":"314","text":"315"},"Update the dependencies array to be: [fetchFilteredProducts, filters]",{"range":"316","text":"317"},{"range":"318","text":"311"},{"range":"319","text":"311"},[1054,1056],"[dispatch]",[3499,3501],"[categoryId, createSnackbar, dispatch, history]",[1649,1651],"[authToken, dispatch, history]",[1353,1355],[3943,3945],"[dispatch, history, productId]",[2134,2136],"[createSnackbar, dispatch, history, username]",[2055,2057],"[products]",[3088,3103],"[attributeSets, dispatch]",[4205,4214],"[fetchFilteredProducts, filters]",[2610,2612],[2074,2076]]